{"ast":null,"code":"// frontend/src/services/shipment.service.js\nimport axios from 'axios';\nimport authHeader from './auth-header';\nconst API_URL = '/api/shipments/';\nclass ShipmentService {\n  getAllShipments() {\n    return axios.get(API_URL, {\n      headers: authHeader()\n    });\n  }\n  getShipmentById(id) {\n    return axios.get(API_URL + id, {\n      headers: authHeader()\n    });\n  }\n  createShipment(shipment) {\n    return axios.post(API_URL, shipment, {\n      headers: authHeader()\n    });\n  }\n  updateShipment(id, shipment) {\n    return axios.put(API_URL + id, shipment, {\n      headers: authHeader()\n    });\n  }\n  deleteShipment(id) {\n    return axios.delete(API_URL + id, {\n      headers: authHeader()\n    });\n  }\n  updateShipmentStatus(id, status) {\n    return axios.put(API_URL + 'status/' + id, null, {\n      params: {\n        status: status\n      },\n      headers: authHeader()\n    });\n  }\n  getShipmentsBySource(sourceId) {\n    return axios.get(API_URL + 'source/' + sourceId, {\n      headers: authHeader()\n    });\n  }\n  getShipmentsByDestination(destinationId) {\n    return axios.get(API_URL + 'destination/' + destinationId, {\n      headers: authHeader()\n    });\n  }\n  getShipmentsByStatus(status) {\n    return axios.get(API_URL + 'status/' + status, {\n      headers: authHeader()\n    });\n  }\n  getShipmentsByDateRange(startDate, endDate, dateType = 'departure') {\n    return axios.get(API_URL + 'date-range', {\n      params: {\n        startDate: startDate.toISOString(),\n        endDate: endDate.toISOString(),\n        dateType: dateType\n      },\n      headers: authHeader()\n    });\n  }\n}\nexport default new ShipmentService();","map":{"version":3,"names":["axios","authHeader","API_URL","ShipmentService","getAllShipments","get","headers","getShipmentById","id","createShipment","shipment","post","updateShipment","put","deleteShipment","delete","updateShipmentStatus","status","params","getShipmentsBySource","sourceId","getShipmentsByDestination","destinationId","getShipmentsByStatus","getShipmentsByDateRange","startDate","endDate","dateType","toISOString"],"sources":["/Users/mariarodriguez/Desktop/supply-chain-visualizer/frontend/src/services/shipment.service.js"],"sourcesContent":["// frontend/src/services/shipment.service.js\nimport axios from 'axios';\nimport authHeader from './auth-header';\n\nconst API_URL = '/api/shipments/';\n\nclass ShipmentService {\n  getAllShipments() {\n    return axios.get(API_URL, { headers: authHeader() });\n  }\n\n  getShipmentById(id) {\n    return axios.get(API_URL + id, { headers: authHeader() });\n  }\n\n  createShipment(shipment) {\n    return axios.post(API_URL, shipment, { headers: authHeader() });\n  }\n\n  updateShipment(id, shipment) {\n    return axios.put(API_URL + id, shipment, { headers: authHeader() });\n  }\n\n  deleteShipment(id) {\n    return axios.delete(API_URL + id, { headers: authHeader() });\n  }\n\n  updateShipmentStatus(id, status) {\n    return axios.put(API_URL + 'status/' + id, null, {\n      params: { status: status },\n      headers: authHeader()\n    });\n  }\n\n  getShipmentsBySource(sourceId) {\n    return axios.get(API_URL + 'source/' + sourceId, { headers: authHeader() });\n  }\n\n  getShipmentsByDestination(destinationId) {\n    return axios.get(API_URL + 'destination/' + destinationId, { headers: authHeader() });\n  }\n\n  getShipmentsByStatus(status) {\n    return axios.get(API_URL + 'status/' + status, { headers: authHeader() });\n  }\n\n  getShipmentsByDateRange(startDate, endDate, dateType = 'departure') {\n    return axios.get(API_URL + 'date-range', {\n      params: {\n        startDate: startDate.toISOString(),\n        endDate: endDate.toISOString(),\n        dateType: dateType\n      },\n      headers: authHeader()\n    });\n  }\n}\n\nexport default new ShipmentService();"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,eAAe;AAEtC,MAAMC,OAAO,GAAG,iBAAiB;AAEjC,MAAMC,eAAe,CAAC;EACpBC,eAAeA,CAAA,EAAG;IAChB,OAAOJ,KAAK,CAACK,GAAG,CAACH,OAAO,EAAE;MAAEI,OAAO,EAAEL,UAAU,CAAC;IAAE,CAAC,CAAC;EACtD;EAEAM,eAAeA,CAACC,EAAE,EAAE;IAClB,OAAOR,KAAK,CAACK,GAAG,CAACH,OAAO,GAAGM,EAAE,EAAE;MAAEF,OAAO,EAAEL,UAAU,CAAC;IAAE,CAAC,CAAC;EAC3D;EAEAQ,cAAcA,CAACC,QAAQ,EAAE;IACvB,OAAOV,KAAK,CAACW,IAAI,CAACT,OAAO,EAAEQ,QAAQ,EAAE;MAAEJ,OAAO,EAAEL,UAAU,CAAC;IAAE,CAAC,CAAC;EACjE;EAEAW,cAAcA,CAACJ,EAAE,EAAEE,QAAQ,EAAE;IAC3B,OAAOV,KAAK,CAACa,GAAG,CAACX,OAAO,GAAGM,EAAE,EAAEE,QAAQ,EAAE;MAAEJ,OAAO,EAAEL,UAAU,CAAC;IAAE,CAAC,CAAC;EACrE;EAEAa,cAAcA,CAACN,EAAE,EAAE;IACjB,OAAOR,KAAK,CAACe,MAAM,CAACb,OAAO,GAAGM,EAAE,EAAE;MAAEF,OAAO,EAAEL,UAAU,CAAC;IAAE,CAAC,CAAC;EAC9D;EAEAe,oBAAoBA,CAACR,EAAE,EAAES,MAAM,EAAE;IAC/B,OAAOjB,KAAK,CAACa,GAAG,CAACX,OAAO,GAAG,SAAS,GAAGM,EAAE,EAAE,IAAI,EAAE;MAC/CU,MAAM,EAAE;QAAED,MAAM,EAAEA;MAAO,CAAC;MAC1BX,OAAO,EAAEL,UAAU,CAAC;IACtB,CAAC,CAAC;EACJ;EAEAkB,oBAAoBA,CAACC,QAAQ,EAAE;IAC7B,OAAOpB,KAAK,CAACK,GAAG,CAACH,OAAO,GAAG,SAAS,GAAGkB,QAAQ,EAAE;MAAEd,OAAO,EAAEL,UAAU,CAAC;IAAE,CAAC,CAAC;EAC7E;EAEAoB,yBAAyBA,CAACC,aAAa,EAAE;IACvC,OAAOtB,KAAK,CAACK,GAAG,CAACH,OAAO,GAAG,cAAc,GAAGoB,aAAa,EAAE;MAAEhB,OAAO,EAAEL,UAAU,CAAC;IAAE,CAAC,CAAC;EACvF;EAEAsB,oBAAoBA,CAACN,MAAM,EAAE;IAC3B,OAAOjB,KAAK,CAACK,GAAG,CAACH,OAAO,GAAG,SAAS,GAAGe,MAAM,EAAE;MAAEX,OAAO,EAAEL,UAAU,CAAC;IAAE,CAAC,CAAC;EAC3E;EAEAuB,uBAAuBA,CAACC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,GAAG,WAAW,EAAE;IAClE,OAAO3B,KAAK,CAACK,GAAG,CAACH,OAAO,GAAG,YAAY,EAAE;MACvCgB,MAAM,EAAE;QACNO,SAAS,EAAEA,SAAS,CAACG,WAAW,CAAC,CAAC;QAClCF,OAAO,EAAEA,OAAO,CAACE,WAAW,CAAC,CAAC;QAC9BD,QAAQ,EAAEA;MACZ,CAAC;MACDrB,OAAO,EAAEL,UAAU,CAAC;IACtB,CAAC,CAAC;EACJ;AACF;AAEA,eAAe,IAAIE,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}