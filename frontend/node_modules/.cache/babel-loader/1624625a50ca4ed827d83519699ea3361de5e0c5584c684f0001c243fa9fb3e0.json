{"ast":null,"code":"import axios from 'axios';\nimport authHeader from './auth-header';\nconst API_URL = '/api/connections/';\nclass ConnectionService {\n  getAllConnections() {\n    return axios.get(API_URL, {\n      headers: authHeader()\n    });\n  }\n  getConnectionById(id) {\n    return axios.get(API_URL + id, {\n      headers: authHeader()\n    });\n  }\n  createConnection(connection) {\n    return axios.post(API_URL, connection, {\n      headers: authHeader()\n    });\n  }\n  updateConnection(id, connection) {\n    return axios.put(API_URL + id, connection, {\n      headers: authHeader()\n    });\n  }\n  deleteConnection(id) {\n    return axios.delete(API_URL + id, {\n      headers: authHeader()\n    });\n  }\n  getConnectionsBySource(sourceId) {\n    return axios.get(API_URL + 'source/' + sourceId, {\n      headers: authHeader()\n    });\n  }\n  getConnectionsByTarget(targetId) {\n    return axios.get(API_URL + 'target/' + targetId, {\n      headers: authHeader()\n    });\n  }\n  getConnectionsBySourceAndTarget(sourceId, targetId) {\n    return axios.get(API_URL + 'nodes', {\n      params: {\n        sourceId: sourceId,\n        targetId: targetId\n      },\n      headers: authHeader()\n    });\n  }\n}\nexport default new ConnectionService();","map":{"version":3,"names":["axios","authHeader","API_URL","ConnectionService","getAllConnections","get","headers","getConnectionById","id","createConnection","connection","post","updateConnection","put","deleteConnection","delete","getConnectionsBySource","sourceId","getConnectionsByTarget","targetId","getConnectionsBySourceAndTarget","params"],"sources":["/Users/mariarodriguez/Desktop/supply-chain-visualizer/frontend/src/services/connection.service.js"],"sourcesContent":["import axios from 'axios';\nimport authHeader from './auth-header';\n\nconst API_URL = '/api/connections/';\n\nclass ConnectionService {\n  getAllConnections() {\n    return axios.get(API_URL, { headers: authHeader() });\n  }\n\n  getConnectionById(id) {\n    return axios.get(API_URL + id, { headers: authHeader() });\n  }\n\n  createConnection(connection) {\n    return axios.post(API_URL, connection, { headers: authHeader() });\n  }\n\n  updateConnection(id, connection) {\n    return axios.put(API_URL + id, connection, { headers: authHeader() });\n  }\n\n  deleteConnection(id) {\n    return axios.delete(API_URL + id, { headers: authHeader() });\n  }\n\n  getConnectionsBySource(sourceId) {\n    return axios.get(API_URL + 'source/' + sourceId, { headers: authHeader() });\n  }\n\n  getConnectionsByTarget(targetId) {\n    return axios.get(API_URL + 'target/' + targetId, { headers: authHeader() });\n  }\n\n  getConnectionsBySourceAndTarget(sourceId, targetId) {\n    return axios.get(API_URL + 'nodes', {\n      params: {\n        sourceId: sourceId,\n        targetId: targetId\n      },\n      headers: authHeader()\n    });\n  }\n}\n\nexport default new ConnectionService();"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,eAAe;AAEtC,MAAMC,OAAO,GAAG,mBAAmB;AAEnC,MAAMC,iBAAiB,CAAC;EACtBC,iBAAiBA,CAAA,EAAG;IAClB,OAAOJ,KAAK,CAACK,GAAG,CAACH,OAAO,EAAE;MAAEI,OAAO,EAAEL,UAAU,CAAC;IAAE,CAAC,CAAC;EACtD;EAEAM,iBAAiBA,CAACC,EAAE,EAAE;IACpB,OAAOR,KAAK,CAACK,GAAG,CAACH,OAAO,GAAGM,EAAE,EAAE;MAAEF,OAAO,EAAEL,UAAU,CAAC;IAAE,CAAC,CAAC;EAC3D;EAEAQ,gBAAgBA,CAACC,UAAU,EAAE;IAC3B,OAAOV,KAAK,CAACW,IAAI,CAACT,OAAO,EAAEQ,UAAU,EAAE;MAAEJ,OAAO,EAAEL,UAAU,CAAC;IAAE,CAAC,CAAC;EACnE;EAEAW,gBAAgBA,CAACJ,EAAE,EAAEE,UAAU,EAAE;IAC/B,OAAOV,KAAK,CAACa,GAAG,CAACX,OAAO,GAAGM,EAAE,EAAEE,UAAU,EAAE;MAAEJ,OAAO,EAAEL,UAAU,CAAC;IAAE,CAAC,CAAC;EACvE;EAEAa,gBAAgBA,CAACN,EAAE,EAAE;IACnB,OAAOR,KAAK,CAACe,MAAM,CAACb,OAAO,GAAGM,EAAE,EAAE;MAAEF,OAAO,EAAEL,UAAU,CAAC;IAAE,CAAC,CAAC;EAC9D;EAEAe,sBAAsBA,CAACC,QAAQ,EAAE;IAC/B,OAAOjB,KAAK,CAACK,GAAG,CAACH,OAAO,GAAG,SAAS,GAAGe,QAAQ,EAAE;MAAEX,OAAO,EAAEL,UAAU,CAAC;IAAE,CAAC,CAAC;EAC7E;EAEAiB,sBAAsBA,CAACC,QAAQ,EAAE;IAC/B,OAAOnB,KAAK,CAACK,GAAG,CAACH,OAAO,GAAG,SAAS,GAAGiB,QAAQ,EAAE;MAAEb,OAAO,EAAEL,UAAU,CAAC;IAAE,CAAC,CAAC;EAC7E;EAEAmB,+BAA+BA,CAACH,QAAQ,EAAEE,QAAQ,EAAE;IAClD,OAAOnB,KAAK,CAACK,GAAG,CAACH,OAAO,GAAG,OAAO,EAAE;MAClCmB,MAAM,EAAE;QACNJ,QAAQ,EAAEA,QAAQ;QAClBE,QAAQ,EAAEA;MACZ,CAAC;MACDb,OAAO,EAAEL,UAAU,CAAC;IACtB,CAAC,CAAC;EACJ;AACF;AAEA,eAAe,IAAIE,iBAAiB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}